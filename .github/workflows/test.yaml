# This is a test workflow used for testing AnimMouse/setup-rclone action if it works or not.
# This is not an example workflow that you will use to use setup-rclone.
# If you forked this repository in order to use setup-rclone, you are doing it wrong. You need to create your own repository and use it there.
# You are only going to use this if you help to develop, or create your own version of this action.

name: Test setup-rclone
on:
  push:
    paths:
      - action.yml
      - scripts/**
      - .github/workflows/test.yaml
  pull_request:
    paths:
      - action.yml
      - scripts/**
      - .github/workflows/test.yaml
      
jobs:
  test-with-config:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        version: [latest, "${{ vars.SPECIFIED_VERSION }}"] # Set the SPECIFIED_VERSION variable to the last previous version in order to pass this test
        
    steps:
      - name: Setup Rclone using setup-rclone
        uses: AnimMouse/setup-rclone@main
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }} # Refer to setup-rclone wiki in order to pass this test
          version: ${{ matrix.version }}
          
      - name: Test Rclone by listing remotes
        run: rclone listremotes
        
      - name: Test Rclone by listing test remote
        run: 'rclone lsd rclone-test-remote:'
        
      - name: Test Rclone by checking version
        run: rclone version
        
  test-with-config-plain-text:
    needs: test-with-config
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        version: [latest, "${{ vars.SPECIFIED_VERSION }}"]
        
    steps:
      - name: Setup Rclone using setup-rclone
        uses: AnimMouse/setup-rclone@main
        with:
          rclone_config: |
            [rclone-test-remote]
            type = http
            url = https://beta.rclone.org/test/
          disable_base64: true
          version: ${{ matrix.version }}
          
      - name: Test Rclone by listing test remote
        run: 'rclone lsd rclone-test-remote:'
        
      - name: Test Rclone by checking version
        run: rclone version
        
  test-config-less:
    needs: test-with-config
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        version: [latest, "${{ vars.SPECIFIED_VERSION }}"]
        
    steps:
      - name: Setup Rclone using setup-rclone
        uses: AnimMouse/setup-rclone@main
        with:
          version: ${{ matrix.version }}
          
      - name: Test Rclone by listing config-less test remote
        run: 'rclone lsd --http-url https://beta.rclone.org/test/ :http:'
        
      - name: Test Rclone by checking version
        run: rclone version
        
  test-update-config:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    steps:
      - name: Get past secret value
        run: echo $rclone_config_update_test | base64 -d
        env:
          rclone_config_update_test: ${{ secrets.RCLONE_CONFIG_UPDATE_TEST }}
          
      - name: Generate new secret value
        run: |
          rclone_config_update_test=$RANDOM
          echo $rclone_config_update_test | tee ~/.config/rclone/rclone.conf
          
      - name: Update Rclone config using setup-rclone/update-config
        uses: AnimMouse/setup-rclone/update-config@main
        with:
          rclone_config_update_name: ${{ secrets.RCLONE_CONFIG_UPDATE_TEST }}
          
      - name: Get new secret value
        run: echo $rclone_config_test | base64 -d
        env:
          rclone_config_update_test: ${{ secrets.RCLONE_CONFIG_UPDATE_TEST }}
          
  test-update-config-windows:
    needs: test-update-config
    runs-on: windows-latest
    steps:
      - name: Get past secret value
        run: '[Text.Encoding]::UTF8.GetString([Convert]::FromBase64String($env:rclone_config_update_test))'
        env:
          rclone_config_update_test: ${{ secrets.RCLONE_CONFIG_UPDATE_TEST }}
          
      - name: Generate new secret value
        run: |
          $rclone_config_update_test = Get-Random
          $rclone_config_update_test
          [IO.File]::WriteAllBytes("$env:APPDATA\rclone\rclone.conf", [Text.Encoding]::UTF8.GetBytes($rclone_config_update_test))
          
      - name: Update Rclone config using setup-rclone/update-config
        uses: AnimMouse/setup-rclone/update-config@main
        with:
          rclone_config_update_name: ${{ secrets.RCLONE_CONFIG_UPDATE_TEST }}
          
      - name: Get new secret value
        run: '[Text.Encoding]::UTF8.GetString([Convert]::FromBase64String($env:rclone_config_update_test))'
        env:
          rclone_config_update_test: ${{ secrets.RCLONE_CONFIG_UPDATE_TEST }}